require "rubygems"  
# ????gem???????????????rubyzip??  
gem 'rubyzip'  
require 'zip'
class ZipUtil < ActiveRecord::Base
  # ??????????
  # zip_file_name ?????????¡¤???????????
  # file_path ?????????????
  def self.add_to_zip_file(zip_file_name,file_path)
    # start_path ???
    def self.add_file(start_path,file_path,zip)
      # ????????????????????????
      if File.directory?(file_path)
        # ??????
        # ??????????§Õ????????????????????????????????????
        zip.mkdir(file_path)
        #        puts "??????#{file_path}"
        Dir.foreach(file_path) do |filename|
          #??????add_file????
          add_file("#{start_path}/#{filename}","#{file_path}/#{filename}",zip) unless filename=="." or filename==".."
        end
      else
        # ????????????????
        # start_path ???????????????????????¡¤??
        # file_path ???????????¡¤??
        zip.add(start_path,file_path)
        #        puts "??????#{file_path}"
      end
    end

    # ?????????????????????
    if File.exist?(zip_file_name)
      #      puts "???????????????????????????????"
      File.delete(zip_file_name)
    end

    # ?????????????¡¤?????????????????
    chdir,tardir = File.split(file_path)
    # ?§İ???????????
    Dir.chdir(chdir) do
      # ??????????
      #      puts "?????????????"
      Zip::File.open(zip_file_name,Zip::File::CREATE) do |zipfile|
        #        puts "?????????????????????..."
        # ????add_file????????????????????
        #        puts "?????????§Ò?????:"
        add_file(tardir,tardir,zipfile)
      end
    end
  end

  def self.unzip_myzip(path)
	Zip::File.open(path) do |zip_file|
  # Handle entries one by one
		zip_file.each do |entry|
			# Extract to file/directory/symlink
			puts "Extracting #{entry.name}"
			entry.extract("D:/image",true)

			# Read into memory
			#content = entry.get_input_stream.read
		end
	end
  end  
  
end
